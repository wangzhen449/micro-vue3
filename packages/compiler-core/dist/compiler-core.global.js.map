{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../src/runtimeHelpers.ts", "../src/ast.ts", "../src/codegen.ts", "../src/utils.ts", "../src/parse.ts", "../src/transform.ts", "../src/transform/transformElement.ts", "../src/transform/transformExpression.ts", "../src/transform/transformText.ts", "../src/compile.ts"],
  "sourcesContent": ["export { compile } from './compile'\n", "export * from './shapeFlags'\nexport * from './patchFlags'\nexport * from './toDisplayString'\n\nconst onRE = /^on[^a-z]/\nexport const isOn = (key) => onRE.test(key)\n\nexport const isArray = Array.isArray\n\nexport const isNumber = (val: unknown): val is number => typeof val === 'number'\n\nexport const isString = (val: unknown): val is string => typeof val === 'string'\n\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\n\nexport const isObject = (value: unknown): value is Record<any, any> =>\n  typeof value === 'object' && value !== null\n\nexport const isFunction = (value: unknown): value is Function =>\n  typeof value === 'function'\n\nexport const hasChanged = (value: any, oldValue: any): boolean =>\n  !Object.is(value, oldValue)\n\nexport const invokeArrayFns = (fns, arg?) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg)\n  }\n}\n\nexport const NOOP = () => {}\n\nexport const extend = Object.assign\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (obj, key) => hasOwnProperty.call(obj, key)\n\nexport const capitalize = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1)\n\n// on + \u9996\u5B57\u6BCD\u5927\u5199\nexport const toHandlerKey = (str: string): string =>\n  str ? `on${capitalize(str)}` : ''\n", "export const FRAGMENT = Symbol('Fragment')\nexport const TO_DISPLAY_STRING = Symbol('toDisplayString')\nexport const CREATE_TEXT = Symbol('createTextVNode')\nexport const CREATE_ELEMENT_VNODE = Symbol('createElementVNode')\nexport const OPEN_BLOCK = Symbol('openBlock')\nexport const CREATE_ELEMENT_BLOCK = Symbol('createElementBlock')\n\nexport const helperNameMap = {\n  [FRAGMENT]: 'Fragment',\n  [TO_DISPLAY_STRING]: 'toDisplayString',\n  [CREATE_TEXT]: 'createTextVNode',\n  [CREATE_ELEMENT_VNODE]: 'createElementVNode',\n  [OPEN_BLOCK]: 'openBlock',\n  [CREATE_ELEMENT_BLOCK]: 'createElementBlock',\n}\n", "import { CREATE_ELEMENT_VNODE } from './runtimeHelpers'\n\nexport const enum NodeTypes {\n  ROOT, // \u6839\u8282\u70B9\n  ELEMENT, // \u5143\u7D20\n  TEXT, // \u6587\u672C\n  COMMENT, // \u6CE8\u91CA\n  SIMPLE_EXPRESSION, // \u7B80\u5355\u8868\u8FBE\u5F0F  xxx  :x=\"xxx\"\n  INTERPOLATION, // \u6A21\u677F\u8868\u8FBE\u5F0F  {{xxx}}\n  ATTRIBUTE, // \u5C5E\u6027\n  DIRECTIVE, // \u6307\u4EE4\n  // containers\n  COMPOUND_EXPRESSION, // \u590D\u5408\u8868\u8FBE\u5F0F {{xxx}}aaa\n  IF,\n  IF_BRANCH,\n  FOR,\n  TEXT_CALL, // \u6587\u672C\u8C03\u7528\n  // codegen\n  VNODE_CALL, // \u5143\u7D20\u8C03\u7528\n  JS_CALL_EXPRESSION, // js\u8C03\u7528\u8868\u8FBE\u5F0F\n  JS_OBJECT_EXPRESSION // js\u5BF9\u8C61\u8868\u8FBE\u5F0F\n}\n\n// \u521B\u5EFA\u6839\u8282\u70B9 fragment\nexport function createRoot(children, loc) {\n  return {\n    type: NodeTypes.ROOT,\n    children,\n    loc\n  }\n}\n\n// \u521B\u5EFA\u7EC4\u5408\u8868\u8FBE\u5F0F\nexport function createCompoundExpression(children, loc) {\n  return {\n    type: NodeTypes.COMPOUND_EXPRESSION, // \u7EC4\u5408\u8868\u8FBE\u5F0F\n    children,\n    loc\n  }\n}\n\n// \u521B\u5EFA\u8C03\u7528\u8868\u8FBE\u5F0F\nexport function createCallExpression(callee, args) {\n  return {\n    type: NodeTypes.JS_CALL_EXPRESSION, // js\u8C03\u7528\u8868\u8FBE\u5F0F\n    callee, // \u8C03\u7528\u7684\u65B9\u6CD5\u540D\n    arguments: args\n  }\n}\n\n// \u521B\u5EFA\u5BF9\u8C61\u8868\u8FBE\u5F0F\nexport function createObjectExpression(properties) {\n  return {\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\n    properties\n  }\n}\n\n// \u521B\u5EFAvnode\u8C03\u7528\nexport function createVNodeCall(context, tag, props, children) {\n  context.helper(CREATE_ELEMENT_VNODE)\n  return {\n    type: NodeTypes.VNODE_CALL, // vnode\u8C03\u7528\n    tag,\n    props,\n    children,\n  }\n}\n", "import { isArray, isString, isSymbol } from '@vue/shared'\nimport { NodeTypes } from './ast'\nimport { CREATE_ELEMENT_BLOCK, helperNameMap, OPEN_BLOCK, TO_DISPLAY_STRING, CREATE_ELEMENT_VNODE } from './runtimeHelpers';\n\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]} as _${helperNameMap[s]}`\n\n// \u521B\u5EFA\u751F\u6210\u4EE3\u7801\u4E0A\u4E0B\u6587 \u52A0\u5165\u65B9\u6CD5\nfunction createCodegenContext(ast) {\n  const context = {\n    code: ``, // \u4EE3\u7801\n    indentLevel: 0, // \u7F29\u8FDB\u5C42\u7EA7\n    helper(key) {\n      return `_${helperNameMap[key]}`\n    },\n    push(code) {\n      context.code += code\n    },\n    indent() {\n      // \u5411\u540E\u7F29\u8FDB\n      newline(++context.indentLevel)\n    },\n    deindent(withoutNewLine = false) {\n      // \u5411\u524D\u7F29\u8FDB\n      if (withoutNewLine) {\n        --context.indentLevel\n      } else {\n        newline(--context.indentLevel)\n      }\n    },\n    newline() {\n      // \u65B0\u884C\n      newline(context.indentLevel)\n    }\n  }\n\n  function newline(n: number) {\n    context.push('\\n' + `  `.repeat(n))\n  }\n\n  return context\n}\n\nexport function generate(ast) {\n  // \u521B\u5EFA\u4E0A\u4E0B\u6587\n  const context = createCodegenContext(ast)\n  const { push, indent, deindent, newline } = context\n\n  const hasHelpers = ast.helpers.length > 0\n\n  // \u5BFC\u5165\u65B9\u6CD5\n  genFunctionPreamble(ast, context)\n\n  const functionName = 'render' // \u51FD\u6570\u540D\n  const args = ['_ctx', '_cache'] // \u51FD\u6570\u53C2\u6570\n  const signature = args.join(', ') // \u62FC\u63A5\u53C2\u6570\n\n  push(`function ${functionName}(${signature}) {`)\n  indent()\n\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context)\n  }\n\n  deindent()\n  push('}')\n\n  console.log(context.code)\n}\n\nfunction genFunctionPreamble(ast, context) {\n  const { push, newline } = context\n\n  if (ast.helpers.length > 0) {\n    push(`import { ${ast.helpers.map(aliasHelper).join(', ')} } from \"vue\"\\n`)\n    newline()\n    push(`export `)\n  }\n}\n\n// children\nfunction genNodeListAsArray(nodes, context) {\n  context.push(`[`)\n  genNodeList(nodes, context)\n  context.push(`]`)\n}\n\n// vnode\nfunction genNodeList(nodes, context) {\n  const { push, newline } = context\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i] === null ? 'null' : nodes[i]\n    if (isString(node)) { // tag\u3001text_children\n      push(node)\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context)\n    } else {\n      genNode(node, context)\n    }\n\n    if (i < nodes.length - 1) {\n      push(', ')\n    }\n  }\n}\n\nfunction genNode(node, context) {\n  // \u6587\u672C\n  if (isString(node)) {\n    context.push(node)\n    return\n  }\n  // helper\n  if (isSymbol(node)) {\n    context.push(context.helper(node))\n    return\n  }\n  switch (node.type) {\n    case NodeTypes.TEXT:\n      genText(node, context)\n      break\n    case NodeTypes.TEXT_CALL:\n      genNode(node.codegenNode, context)\n      break\n    case NodeTypes.INTERPOLATION: // \u8868\u8FBE\u5F0F\n      genInterpolation(node, context)\n      break\n    case NodeTypes.SIMPLE_EXPRESSION: // \u7B80\u5355\u8868\u8FBE\u5F0F\n      genExpression(node, context)\n      break\n    case NodeTypes.COMPOUND_EXPRESSION: // \u590D\u5408\u8868\u8FBE\u5F0F\n      genCompoundExpression(node, context)\n      break\n    case NodeTypes.ELEMENT: // \u5143\u7D20\n      genNode(node.codegenNode, context)\n      break\n    case NodeTypes.VNODE_CALL:\n      genVNodeCall(node, context)\n      break\n    case NodeTypes.JS_CALL_EXPRESSION:\n      genCallExpression(node, context)\n      break\n    case NodeTypes.JS_OBJECT_EXPRESSION:\n      genObjectExpression(node, context)\n      break\n    default:\n      break;\n  }\n}\n\n// \u6587\u672C\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content))\n}\n\n// \u8868\u8FBE\u5F0F\nfunction genInterpolation(node, context) {\n  const { push, helper } = context\n  push(`${helper(TO_DISPLAY_STRING)}(`)\n  genNode(node.content, context)\n  push(')')\n}\n\n// \u7B80\u5355\u8868\u8FBE\u5F0F\nfunction genExpression(node, context) {\n  context.push(node.content)\n}\n\n// \u590D\u5408\u8868\u8FBE\u5F0F\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (isString(child)) { // +\n      context.push(child)\n    } else {\n      genNode(child, context)\n    }\n  }\n}\n\n// VNode\nfunction genVNodeCall(node, context) {\n  const { push, helper } = context\n  const {\n    tag,\n    props,\n    children,\n    isBlock,\n  } = node\n  // \u662Fblock\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}, `)\n  }\n  const callHelper = isBlock ? CREATE_ELEMENT_BLOCK : CREATE_ELEMENT_VNODE\n  push(helper(callHelper) + `(`)\n  genNodeList([tag, props, children], context)\n  push(`)`)\n  if (isBlock) {\n    push(`)`)\n  }\n}\n\n// \u8C03\u7528\u8868\u8FBE\u5F0F\nfunction genCallExpression(node, context) {\n  const { push, helper } = context\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\n  // \u51FD\u6570\u540D\n  push(callee + `(`)\n  // \u53C2\u6570\n  genNodeList(node.arguments, context)\n  push(')')\n}\n\n// \u5BF9\u8C61\u8868\u8FBE\u5F0F \u6BD4\u5982\u5C5E\u6027\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context\n  const { properties } = node\n  if (!properties.length) {\n    push(`{}`, node)\n    return\n  }\n  // \u8D85\u8FC7\u4E00\u4E2A\u5C31\u6362\u884C\n  const multilines = properties.length > 1\n  push(multilines ? `{` : `{ `)\n  multilines && indent()\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i]\n    // key\n    push(key)\n    push(`: `)\n    // value\n    genNode(value, context)\n    // \u8D85\u8FC7\u4E00\u4E2A\u7684\u65F6\u5019\n    if (i < properties.length - 1) {\n      push(`,`)\n      newline()\n    }\n  }\n  multilines && deindent()\n  push(multilines ? `}` : ` }`)\n}\n", "import { NodeTypes } from './ast'\nimport { OPEN_BLOCK, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE } from './runtimeHelpers'\n\n// \u66F4\u65B0context\u4F4D\u7F6E\u4FE1\u606F\nexport function advancePositionWithMutation(pos, source, numberOfCharacters) {\n  // \u6240\u5360\u884C\u6570\n  let linesCount = 0\n  // \u6700\u540E\u4E00\u4E2A\u6362\u884C\u7684\u7ED3\u5C3E\u4F4D\u7F6E\n  let lastNewLinePos = -1\n  for (let i = 0; i < numberOfCharacters; i++) {\n    // \u5982\u679C\u9047\u5230\u6362\u884C\u7B26\uFF08\\n \u7684 Unicode \u7801\u4E3A10\uFF09\n    // \u6E90\u7801\u4E2D\u4F7F\u7528charCodeAt\uFF0CcodePointAt\u65B0\u589E\u4E86\u5BF9\u4E8E4\u4E2A\u5B57\u8282\u5B57\u7B26\u7684\u652F\u6301\u3002\u5728\u8FD9\u91CC\u53EA\u5224\u65AD\u6362\u884C\u7B26\uFF0C\u90FD\u4E00\u6837\n    if (source.codePointAt(i) === 10) {\n      // \u589E\u52A0\u884C\u6570\n      linesCount++\n      // \u6700\u540E\u4E00\u4E2A\u6362\u884C\u7684\u7ED3\u5C3E\u4F4D\u7F6E\n      lastNewLinePos = i\n    }\n  }\n\n  pos.offset += numberOfCharacters // \u504F\u79FB\u91CF\n  pos.line += linesCount // \u884C\u6570\n  pos.column =\n    lastNewLinePos === -1\n      ? pos.column + numberOfCharacters\n      : numberOfCharacters - lastNewLinePos // \u6240\u6709\u4F4D\u6570 \u51CF\u53BB \u6700\u540E\u4E00\u4E2A\u6362\u884C\u7ED3\u5C3E\u4F4D\u7F6E\uFF0C\u5C31\u662Fcolumn\n}\n\n// \u662F\u6587\u672C\nexport function isText(node) {\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\n}\n\n// \u521B\u5EFAblock\nexport function makeBlock(node, { helper, removeHelper } ) {\n  if (!node.isBlock) {\n    node.isBlock = true\n    // \u79FB\u9664\u4E00\u4E2ACREATE_ELEMENT_VNODE\uFF0C\u6362\u4E3Ablock helper\n    removeHelper(CREATE_ELEMENT_VNODE)\n    helper(OPEN_BLOCK)\n    helper(CREATE_ELEMENT_BLOCK)\n  }\n}\n\n", "import { createRoot, NodeTypes } from './ast'\nimport { advancePositionWithMutation } from './utils'\n\n/**\n * 1. \u521B\u5EFAparse\u4E0A\u4E0B\u6587\n * 2. \u83B7\u53D6\u5F53\u524D\u4F4D\u7F6E\n * 3. parse \u5E76\u8FD4\u56DEast\n */\nexport function parse(content) {\n  const context = createParserContext(content)\n  const start = getCursor(context)\n\n  return createRoot(parseChildren(context), getSelection(context, start))\n}\n\n// \u521B\u5EFAparse\u4E0A\u4E0B\u6587\nfunction createParserContext(content) {\n  return {\n    column: 1, // \u5217\n    line: 1, // \u884C\n    offset: 0, // \u504F\u79FB\u91CF\n    originalSource: content, // \u6E90\u5185\u5BB9\uFF0C\u4E0D\u4F1A\u6539\u53D8\n    source: content // \u5269\u4F59\u5185\u5BB9\uFF0C\u901A\u8FC7\u4E0D\u65AD\u7684\u5B57\u7B26\u622A\u53D6(slice)\u5B8C\u6210\u89E3\u6790\n  }\n}\n\n/**\n * \u6309\u7167\u7C7B\u578B\u5224\u65AD\uFF0C\u4F7F\u7528\u4E0D\u540C\u89E3\u6790\u65B9\u6848\n * {{ \u8868\u8FBE\u5F0F\n * < \u6807\u7B7E\n * xxx \u6587\u672C\n * \u53BB\u9664\u7A7A\u767D\u8282\u70B9\n */\nfunction parseChildren(context) {\n  const nodes = []\n  // \u5982\u679C\u8FD8\u6CA1\u7ED3\u675F\n  while (!isEnd(context)) {\n    let node\n    // \u5F53\u524D\u5269\u4F59\n    const s = context.source\n    // {{xxx}}\n    if (s.startsWith('{{')) {\n      node = parseInterpolation(context)\n    } else if (s[0] === '<') {\n      // \u6807\u7B7E\n      node = parseElement(context)\n    }\n\n    // \u6587\u672C\n    if (!node) {\n      node = parseText(context)\n    }\n    nodes.push(node)\n  }\n\n  // \u5904\u7406\u7A7A\u767D\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i]\n    if (node.type === NodeTypes.TEXT) {\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n        // \u6807\u8BB0\u7A7A\u767D\n        nodes[i] = null\n      }\n    }\n  }\n\n  return nodes.filter(Boolean)\n}\n\n/**\n * parse {{}} \u7684\u63D2\u5165\u503C\n * 1. \u53BB\u6389 {{\n * 2. \u5904\u7406\u4E2D\u95F4\u6587\u672C\u90E8\u5206\n * 2.1 \u5904\u7406\u4E2D\u95F4\u6587\u672C\u5B58\u5728\u524D\u540E\u7A7A\u683C\u7684\u95EE\u9898\u3002\u6587\u672C\u90E8\u5206\u7684\u4F4D\u7F6E\u4FE1\u606F\u662F\u6CA1\u6709\u524D\u540E\u7A7A\u683C\u90E8\u5206\u7684\n * 3. \u53BB\u6389 }}\n * 4. \u8FD4\u56DE \u8868\u8FBE\u5F0F\u5BF9\u8C61\n */\nfunction parseInterpolation(context) {\n  const [open, close] = ['{{', '}}']\n  // \u627E\u5230\u7ED3\u675F\u4F4D\u7F6E\n  const closeIndex = context.source.indexOf(close, open.length)\n  if (closeIndex === -1) {\n    console.warn('\u6CA1\u6709\u7ED3\u675F}}')\n    return\n  }\n\n  // 1. \u53BB\u6389 {{\n  // \u5F00\u59CB\u4F4D\u7F6E\n  const start = getCursor(context)\n  // \u53BB\u6389 {{\n  advanceBy(context, open.length)\n\n  // 2. \u5904\u7406\u4E2D\u95F4\u6587\u672C\n  // \u5F00\u59CB\u4F4D\u7F6E\uFF08\u6700\u7EC8\u6587\u672C\u7684\u5F00\u59CB\u4F4D\u7F6E\uFF09\n  const innerStart = getCursor(context)\n  // \u7ED3\u675F\u4F4D\u7F6E\uFF08\u6700\u7EC8\u6587\u672C\u7684\u7ED3\u675F\u4F4D\u7F6E\uFF09\n  const innerEnd = getCursor(context)\n  // \u63D2\u5165\u503C\u957F\u5EA6\n  const rawContentLength = closeIndex - open.length\n  // \u63D2\u5165\u503C\u5185\u5BB9\n  const rawContent = context.source.slice(0, rawContentLength)\n  // \u63D2\u5165\u503C\u662F\u6587\u672C\uFF0C\u6240\u4EE5\u4F7F\u7528parseTextData\u5904\u7406\u3002\u4F46\u662F\u8FD9\u90E8\u5206\u5185\u5BB9\u524D\u540E\u53EF\u80FD\u5B58\u5728\u7A7A\u683C\u3002\u771F\u5B9E\u6587\u672C\u9700\u8981\u5904\u7406\u6389\u524D\u540E\u7684\u7A7A\u683C\n  const preTrimContent = parseTextData(context, rawContentLength)\n\n  // 2.1 \u5904\u7406\u6587\u672C\u524D\u540E\u7A7A\u683C\u9020\u6210\u7684\u4F4D\u7F6E\u95EE\u9898\n  // trim\n  const content = preTrimContent.trim()\n  // ------ \u5904\u7406\u524D\u9762\n  // \u524D\u9762\u7684\u504F\u79FB\u91CF\n  const startOffset = preTrimContent.indexOf(content)\n  // \u524D\u9762\u6709\u7A7A\u683C\n  if (startOffset > 0) {\n    // \u66F4\u65B0innderStart\u7684\u4F4D\u7F6E\u4FE1\u606F\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\n  }\n  // ------ \u5904\u7406\u540E\u9762\n  // \u5982\u679C\u540E\u9762\u6709\u7A7A\u683C\n  const endOffset = startOffset + content.length\n  if (endOffset < rawContentLength) {\n    // \u66F4\u65B0innerEnd\u7684\u4F4D\u7F6E\u4FE1\u606F\n    advancePositionWithMutation(innerEnd, rawContent, endOffset)\n  }\n\n  // 3. \u53BB\u6389 }}\n  advanceBy(context, close.length)\n\n  // 4. \u8FD4\u56DE \u8868\u8FBE\u5F0F\u5BF9\u8C61\n  return {\n    type: NodeTypes.INTERPOLATION, // \u6A21\u677F\u8868\u8FBE\u5F0F\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION, // \u7B80\u5355\u8868\u8FBE\u5F0F\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    col: getSelection(context, start)\n  }\n}\n\n/**\n * parse \u5143\u7D20\n * 1. \u5904\u7406\u5F00\u59CB\u6807\u7B7E\n * 2. \u5904\u7406\u6807\u7B7E\u5185\u90E8\u5185\u5BB9\uFF0C\u9047\u5230\u5B50\u5143\u7D20\u8FDB\u884C\u9012\u5F52\u8C03\u7528\uFF0C\u4ECE\u800C\u6784\u5EFA\u62BD\u8C61\u8BED\u6CD5\u6811\n * 3. \u5904\u7406\u7ED3\u675F\u6807\u7B7E \u66F4\u65B0\u5F00\u59CB\u5230\u7ED3\u675F\u7684\u4F4D\u7F6E\n * 4. \u8FD4\u56DE \u5143\u7D20\u5BF9\u8C61\n */\nfunction parseElement(context) {\n  // 1. \u5904\u7406\u5F00\u59CB\u6807\u7B7E\n  const element = parseTag(context, TagType.Start)\n  // \u81EA\u5173\u95ED\u6807\u7B7E\n  if (element.isSelfClosing) {\n    return element\n  }\n\n  // 2. \u5904\u7406\u6807\u7B7E\u5185\u90E8\u5185\u5BB9\u3002\u9012\u5F52\u8C03\u7528\n  const children = parseChildren(context)\n  // \u7236\u8282\u70B9\u6DFB\u52A0\u5B50\u8282\u70B9\u4FE1\u606F\n  element.children = children\n\n  // 3. \u5904\u7406\u7ED3\u675F\u6807\u7B7E\n  // \u5982\u679C\u662F\u7ED3\u675F\u6807\u7B7E\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, TagType.End)\n  }\n  // element\u4E0A\u9762\u4FDD\u5B58\u7684\u8FD8\u662F\u5F00\u59CB\u6807\u7B7E\u7684\u4F4D\u7F6E\u3002\u5230\u7ED3\u675F\u6807\u7B7E\u4E4B\u540E\uFF0C\u9700\u8981\u66F4\u65B0\u4F4D\u7F6E\u5230\u7ED3\u675F\u6807\u7B7E\n  element.loc = getSelection(context, element.loc.start)\n\n  return element\n}\n\nconst enum TagType {\n  Start,\n  End\n}\n\n/**\n * \u5904\u7406\u6807\u7B7E\n * 1. \u5904\u7406\u6807\u7B7Eopen <div </div\n * 2. \u5904\u7406\u5143\u7D20\u5C5E\u6027\n * 3. \u5904\u7406\u6807\u7B7Eclose > />\n * 4. \u8FD4\u56DE \u5143\u7D20\u5BF9\u8C61\u3002\u6807\u7B7E\u7ED3\u675F\u65E0\u8FD4\u56DE </div>\n */\nfunction parseTag(context, type) {\n  // \u6807\u7B7E\u5F00\u59CB\n  const start = getCursor(context)\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)\n  // \u6807\u7B7E\u540D\n  const tag = match[1]\n  // \u622A\u6389\u6807\u7B7E\u540D <div \u6216 </div\n  advanceBy(context, match[0].length)\n  advanceSpaces(context)\n\n  // \u5904\u7406\u5143\u7D20\u5C5E\u6027\n  const props = parseAttributes(context, type)\n\n  // \u6807\u7B7E\u7ED3\u675F\n  let isSelfClosing = false\n  // \u81EA\u5173\u95ED\u6807\u7B7E\n  if (context.source.startsWith('/>')) {\n    isSelfClosing = true\n  }\n  // \u622A\u6389 > \u6216\u8005 />\n  advanceBy(context, isSelfClosing ? 2 : 1)\n\n  // \u7ED3\u675F\u6807\u7B7E\uFF0C\u76F4\u63A5\u8FD4\u56DE\n  if (type === TagType.End) {\n    return\n  }\n\n  return {\n    type: NodeTypes.ELEMENT,\n    tag,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start)\n  }\n}\n\n/**\n * parse \u6587\u672C\n * 1. \u627E\u5230text\u7684\u7ED3\u675F\u4F4D\u7F6E\n * 2. \u8FD4\u56DEtext\u90E8\u5206\u7684\u4F4D\u7F6E\u4FE1\u606F\n * 3. \u8FD4\u56DE\u6587\u672C\u5BF9\u8C61\n */\nfunction parseText(context) {\n  // 1. \u627E\u5230text\u7684\u7ED3\u675F\u4F4D\u7F6E\n  // \u9047\u5230\u8FD9\u4E24\u4E2A\u505C\u6B62\n  const endTokens = ['<', '{{']\n  // \u7ED3\u675F\u7D22\u5F15\n  let endIndex = context.source.length\n  for (let i = 0; i < endTokens.length; i++) {\n    // \u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E\n    const index = context.source.indexOf(endTokens[i], 1)\n    if (index !== -1 && index < endIndex) {\n      endIndex = index\n    }\n  }\n\n  // 2. \u8FD4\u56DEtext\u90E8\u5206\u7684\u4F4D\u7F6E\u4FE1\u606F\n  // \u5F00\u59CB\u4FE1\u606F\n  const start = getCursor(context)\n  // \u5220\u9664\u6389text\u7684\u5185\u5BB9\uFF0C\u5E76\u8FD4\u56DE\u3002\u66F4\u65B0context\u4F4D\u7F6E\u4FE1\u606F\n  const content = parseTextData(context, endIndex)\n\n  // 3. \u8FD4\u56DE\u6587\u672C\u5BF9\u8C61 (\u7C7B\u578B\u3001\u5185\u5BB9\u3001\u4F4D\u7F6E\u4FE1\u606F)\n  return {\n    type: NodeTypes.TEXT, // \u6587\u672C\n    content,\n    // \u6587\u672C\u7684\u4F4D\u7F6E\u4FE1\u606F \u5F00\u59CB\u548C\u7ED3\u675F\uFF08\u5F00\u59CB\u7684\u5DF2\u8BB0\u5F55\uFF0Csource\u5DF2\u7ECF\u622A\u53D6\u5B8C\uFF0C\u7ED3\u675F\u4F4D\u7F6E\u5C31\u662F\u5F53\u524D\u4F4D\u7F6E\uFF09\n    loc: getSelection(context, start)\n  }\n}\n\n// parse \u6587\u672C\u90E8\u5206\nfunction parseTextData(context, length) {\n  const rawText = context.source.slice(0, length)\n  // \u66F4\u65B0\u4E0A\u4E0B\u6587\n  advanceBy(context, length)\n  return rawText\n}\n\n/**\n * parse \u5C5E\u6027\n * \u628A\u6240\u6709\u5C5E\u6027push\u5230props\u4E2D\n */\nfunction parseAttributes(context, type) {\n  if (type === TagType.End) {\n    return\n  }\n  const props = []\n  // \u5FAA\u73AF\u5230\u6807\u7B7E\u7ED3\u675F\n  while (\n    context.source.length > 0 &&\n    !context.source.startsWith('>') &&\n    !context.source.startsWith('/>')\n  ) {\n    const attr = parseAttribute(context)\n\n    props.push(attr)\n\n    advanceSpaces(context)\n  }\n\n  return props\n}\n\n/**\n * parse \u5C5E\u6027\n * 1. \u5C5E\u6027\u540D\n * 2. \u5C5E\u6027\u503C\n */\nfunction parseAttribute(context) {\n  // \u5F00\u59CB\u4F4D\u7F6E\n  const start = getCursor(context)\n  // \u5C5E\u6027\u540D\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)\n  const name = match[0]\n  // \u622A\u53D6\u6389name\n  advanceBy(context, name.length)\n\n  // \u5C5E\u6027\u503C\n  let value\n  // \u6709\u7B49\u53F7\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    // \u5220\u9664\u7A7A\u683C\n    advanceSpaces(context)\n    // \u5220\u9664\u7B49\u53F7\n    advanceBy(context, 1)\n    // \u5220\u9664\u7A7A\u683C\n    advanceSpaces(context)\n    // \u89E3\u6790\u503C\n    value = parseAttributeValue(context)\n  }\n\n  return {\n    type: NodeTypes.ATTRIBUTE,\n    name,\n    value: value && {\n      type: NodeTypes.TEXT,\n      content: value.content,\n      loc: value.loc\n    },\n    loc: getSelection(context, start)\n  }\n}\n\n/**\n * parse \u503C\n * 1. \u6709\u9017\u53F7\uFF0C\u65E0\u9017\u53F7\u6682\u4E0D\u8003\u8651\n */\nfunction parseAttributeValue(context) {\n  const start = getCursor(context)\n  let content\n\n  const quote = context.source[0]\n  const isQuoted = quote === `\"` || quote === `'`\n  if (isQuoted) {\n    // \u6709\u9017\u53F7\n    // \u5220\u9664\u5DE6\u9017\u53F7\n    advanceBy(context, 1)\n\n    // \u53F3\u9017\u53F7\u4F4D\u7F6E\n    const endIndex = context.source.indexOf(quote)\n    // parse \u6587\u672C\uFF0C\u83B7\u53D6\u5185\u5BB9\n    content = parseTextData(context, endIndex)\n\n    // \u5220\u9664\u53F3\u9017\u53F7\n    advanceBy(context, 1)\n  }\n\n  return {\n    content,\n    loc: getSelection(context, start)\n  }\n}\n\n/**\n * \u66F4\u65B0context\u64CD\u4F5C\n * \u622A\u53D6source\uFF0C\u66F4\u65B0context\u4F4D\u7F6E\u4FE1\u606F\n */\nfunction advanceBy(context, numberOfCharacters) {\n  let { source } = context\n  // \u66F4\u65B0context\u4F4D\u7F6E\n  advancePositionWithMutation(context, source, numberOfCharacters)\n  context.source = source.slice(numberOfCharacters)\n}\n\n// \u5220\u9664\u7A7A\u683C\nfunction advanceSpaces(context) {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\n  if (match) {\n    advanceBy(context, match[0].length)\n  }\n}\n\n// \u83B7\u53D6\u622A\u53D6\u7684\u4F4D\u7F6E\u4FE1\u606F\nfunction getSelection(context, start, end?) {\n  // \u5DF2\u7ECF\u505A\u8FC7\u622A\u53D6\u64CD\u4F5C\uFF0C\u73B0\u5728\u7684\u5F00\u59CB\u5C31\u662F\u4E4B\u524D\u7684\u7ED3\u675F\n  end = end || getCursor(context)\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  }\n}\n\n// \u83B7\u53D6\u4F4D\u7F6E\nfunction getCursor(context) {\n  const { line, column, offset } = context\n  return { line, column, offset }\n}\n\n// \u662F\u5426\u89E3\u6790\u5B8C\u6BD5\nfunction isEnd(context) {\n  // \u622A\u53D6\u5B8C\u6BD5\uFF0C\u6216\u8005\u9047\u5230\u7ED3\u675F\u6807\u7B7E\u5C31\u505C\u6B62\uFF08\u4E3A\u4E86\u505C\u6B62\u9012\u5F52\uFF09\n  return !context.source || context.source.startsWith('</')\n}\n\n// \u7ED3\u675F\u6807\u7B7E\nfunction startsWithEndTagOpen(source, tag) {\n  return (\n    source.startsWith('</') &&\n    // \u524D\u540E\u6807\u7B7E\u540D\u4E00\u81F4\n    source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\n    // > \u7ED3\u5C3E\n    /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>')\n  )\n}\n", "import { NodeTypes, createVNodeCall } from './ast'\nimport { FRAGMENT, TO_DISPLAY_STRING } from './runtimeHelpers'\nimport { makeBlock } from './utils'\n\n// \u521B\u5EFA\u8F6C\u6362\u4E0A\u4E0B\u6587\nfunction createTransformContext(root, { nodeTransform }) {\n  const context = {\n    root, // \u6839\u8282\u70B9\n    parent: null, // \u7236\u8282\u70B9\n    currentNode: root, // \u5F53\u524D\u8282\u70B9\n    helpers: new Map(),\n    helper(name) {\n      // \u8BB0\u5F55\u8C03\u7528\u6B21\u6570\n      const count = context.helpers.get(name) || 0\n      context.helpers.set(name, count + 1)\n      return name\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name)\n      if (count) {\n        const currentCount = count - 1\n        if (!currentCount) {\n          context.helpers.delete(name)\n        } else {\n          context.helpers.set(name, currentCount)\n        }\n      }\n    },\n    nodeTransform\n  }\n\n  return context\n}\n\n/**\n * 1. \u521B\u5EFA\u8F6C\u6362\u4E0A\u4E0B\u6587\n * 2. \u6309\u7167\u7C7B\u578B\u505A\u8F6C\u6362\n * 3. \u9012\u5F52\u8F6C\u6362\n * 4. \u6839\u8282\u70B9\n */\nexport function transform(root, options) {\n  // \u521B\u5EFA\u8F6C\u6362\u4E0A\u4E0B\u6587\n  const context = createTransformContext(root, options)\n\n  // \u904D\u5386\u6240\u6709\u8282\u70B9\n  traverseNode(root, context)\n\n  // \u6839\u8282\u70B9\n  createRootCodegen(root, context)\n\n  root.helpers = [...context.helpers.keys()]\n}\n\n// \u6839\u8282\u70B9 codegen\nfunction createRootCodegen(root, context) {\n  const { children } = root\n  // \u53EA\u6709\u4E00\u4E2A\u5B50\u5143\u7D20\n  if (children.length === 1) {\n    const child = children[0]\n\n    // \u5355\u72EC\u5143\u7D20\u6839\u8282\u70B9\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode\n      // \u552F\u4E00\u5B50\u5143\u7D20\u662F vnode\u8C03\u7528\uFF0C\u521B\u5EFAblock\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\n        makeBlock(codegenNode, context)\n      }\n      root.codegenNode = codegenNode\n    } else {\n      // \u5355\u72EC\u6587\u672C\uFF0C\u7B49\n      root.codegenNode = child\n    }\n  } else if (children.length > 1) {\n    // \u591A\u4E2A\u5B50\u5143\u7D20\n    root.codegenNode = createVNodeCall(\n      context,\n      context.helper(FRAGMENT),\n      null,\n      children\n    )\n  }\n}\n\n// \u5355\u4E2A\u5143\u7D20\u8282\u70B9\nfunction isSingleElementRoot(root, child) {\n  const { children } = root\n  return children.length === 1 && child.type === NodeTypes.ELEMENT\n}\n\n/**\n * transform \u904D\u5386\u8282\u70B9\n * 1. \u8C03\u7528\u6240\u6709nodeTransform\uFF0C\u5BF9\u4E8E\u9700\u8981\u540E\u7F6E\u5904\u7406\u7684\uFF0C\u5B58\u50A8\u5230\u9000\u51FA\u51FD\u6570\u96C6\u5408\u4E2D\n * 2. \u9012\u5F52\u5904\u7406\u5B50\u5143\u7D20\n * 3. \u9012\u5F52\u9000\u51FA\uFF0C\u6267\u884C\u9000\u51FA\u51FD\u6570\n */\nfunction traverseNode(node, context) {\n  context.currentNode = node\n\n  const { nodeTransform } = context\n\n  // \u8FD9\u91CC\u9700\u8981\u4F7F\u7528\u9000\u51FA\u51FD\u6570\uFF0C\u662F\u56E0\u4E3A\u53EA\u6709\u5904\u7406\u5B8Cchildren\u7684\u6BCF\u4E2A\u5143\u7D20\u540E\uFF0C\u624D\u80FD\u5BF9children\u8FDB\u884C\u4E8C\u6B21\u5904\u7406\u3002\uFF08\u6BD4\u5982\u591A\u4E2A\u6587\u672C\u62FC\u63A5\u5728\u4E00\u8D77\uFF09\n  // \u6240\u4EE5\u5BF9\u4E8E\u5904\u7406\u51FD\u6570\u8FDB\u884C\u7F13\u5B58\uFF0C\u5728\u9012\u5F52\u9000\u51FA\u7684\u65F6\u5019\u8FDB\u884C\u8C03\u7528\n  const exitFns = []\n  for (let i = 0; i < nodeTransform.length; i++) {\n    // type \u662Felement\u6216text \u8FD9\u91CC\u8FD4\u56DE\u7684\u662F\u51FD\u6570\u3002INTERPOLATION \u8868\u8FBE\u5F0F\u7C7B\u578B\u76F4\u63A5\u5904\u7406\uFF0C\u4E0D\u9700\u8981\u5B58\u5165\u9000\u51FA\u51FD\u6570\u3002\n    const onExit = nodeTransform[i](node, context)\n    if (onExit) {\n      exitFns.push(onExit)\n    }\n\n    if (!context.currentNode) {\n      // \u8282\u70B9\u88AB\u5220\u9664\u6389\u4E86\uFF0C\u5C31\u65E0\u9700\u8FDB\u884C\u5B50\u8282\u70B9\u7684\u9012\u5F52\n      return\n    } else {\n      node = context.currentNode\n    }\n  }\n\n  switch (node.type) {\n    case NodeTypes.INTERPOLATION:\n      // \u6CE8\u5165 toString helper\n      context.helper(TO_DISPLAY_STRING)\n      break\n    case NodeTypes.ELEMENT:\n    case NodeTypes.ROOT:\n      // \u5143\u7D20\u7C7B\u578B\u8282\u70B9\uFF0C\u9700\u8981\u9012\u5F52\u904D\u5386\u5B50\u8282\u70B9\n      traverseChildren(node, context)\n      break\n  }\n\n  // \u5728\u9012\u5F52\u8FC7\u7A0B\u4E2D\uFF0CcurrentNode\u4F1A\u53D8\uFF0C\u6240\u4EE5\u8FD9\u91CC\u8FD8\u4F7F\u7528\u5F53\u524D\u51FD\u6570\u4F5C\u7528\u57DF\u7684node\n  context.currentNode = node\n  // \u7B49\u5B50\u8282\u70B9\u9012\u5F52\u5B8C\u6210\uFF0C\u9000\u51FA\u7684\u65F6\u5019\uFF0C\u904D\u5386\u9000\u51FA\u51FD\u6570\u8FDB\u884C\u6267\u884C\n  // \u6309\u7167nodeTransform\u5012\u5E8F\u6267\u884C\uFF0CtransformText -> transformElement \u5148\u5904\u7406\u6587\u672C\uFF0C\u7136\u540E\u68B3\u7406\u5143\u7D20\n  let i = exitFns.length\n  while (i--) {\n    exitFns[i]()\n  }\n}\n\n// \u904D\u5386\u5B50\u8282\u70B9\nfunction traverseChildren(parent, context) {\n  for (let i = 0; i < parent.children.length; i++) {\n    const child = parent.children[i]\n    // \u6807\u8BB0\u7236\u8282\u70B9\n    child.parent = parent\n    // \u904D\u5386\u5B50\u8282\u70B9\n    traverseNode(child, context)\n  }\n}\n", "import { NodeTypes, createObjectExpression, createVNodeCall } from '../ast'\n\n/**\n * transform \u5143\u7D20\n * 1. tag\u3001props\u3001children  \u4F7F\u7528createElementVNode\n */\nexport function transformElement(node, context) {\n  return function postTransformElement() {\n    if (node.type !== NodeTypes.ELEMENT) {\n      return\n    }\n\n    const { tag, props } = node\n    // \u5143\u7D20\u540D\u79F0\n    let vnodeTag = `\"${tag}\"`\n\n    // \u5C5E\u6027\n    let properties = []\n    if (props.length > 0) {\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i]\n        if (prop.type === NodeTypes.ATTRIBUTE) {\n          const { name, value } = prop\n          // value\u662Fundefined\u65F6\uFF0C\u65E0\u503C\u5C5E\u6027\u503C\u4E3Atrue\n          properties.push({\n            key: name,\n            value: value\n              ? value.content\n                ? value.content\n                : ''\n              : true,\n          })\n        }\n      }\n    }\n    // \u5C5E\u6027\u8868\u8FBE\u5F0F\n    const propsExpression =\n      properties.length > 0 ? createObjectExpression(properties) : null\n\n    // children\n    let vnodeChildren = null\n    if (node.children.length > 0) {\n      if (node.children.length === 1) {\n        // \u957F\u5EA6\u4E00\u4E2A\u7684\u65F6\u5019\uFF0C\u76F4\u63A5\u7528\u5BF9\u8C61\n        vnodeChildren = node.children[0]\n      } else if (node.children.length > 1) {\n        vnodeChildren = node.children\n      }\n    }\n\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      propsExpression,\n      vnodeChildren\n    )\n  }\n}\n", "import { NodeTypes } from '../ast'\n\nexport const transformExpression = (node, context) => {\n  // \u5982\u679C\u662F\u8868\u8FBE\u5F0F\uFF0C\u66FF\u6362\u5185\u5BB9\n  if (node.type === NodeTypes.INTERPOLATION) {\n    const raw = node.content.content\n    node.content.content = `_ctx.${raw}`\n  }\n}\n", "import { PatchFlags } from '@vue/shared'\nimport {\n  createCallExpression,\n  createCompoundExpression,\n  NodeTypes\n} from '../ast'\nimport { CREATE_TEXT } from '../runtimeHelpers'\nimport { isText } from '../utils'\n\n/**\n * transform \u6587\u672C\n * 1. \u5408\u5E76\u5B50\u8282\u70B9\u4E2D\u76F8\u90BB\u7684\u6587\u672C\u8282\u70B9 <div>abc {{ d }} {{ e }}</div> \u53D8\u4E3A\u590D\u5408\u8868\u8FBE\u5F0F\n * 2. \u6DFB\u52A0 createTextVNode helper\uFF0C\u5BF9\u4E8E\u52A8\u6001\u6587\u672C\u6DFB\u52A0patchFlag\n */\nexport function transformText(node, context) {\n  // \u6839\u8282\u70B9\u6216\u8005\u5143\u7D20\u8282\u70B9\n  if (node.type === NodeTypes.ROOT || node.type === NodeTypes.ELEMENT) {\n    return () => {\n      const children = node.children\n      let currentContainer\n      let hasText = false\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child)) {\n          hasText = true\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j]\n            if (isText(next)) {\n              // \u7B2C\u4E00\u4E2A\u76F8\u90BB \u521D\u59CB\u5316\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                )\n              }\n\n              // \u8FDE\u7EED\n              // \u5408\u5E76\n              currentContainer.children.push('+', next)\n              // \u5220\u6389\u5F53\u524D\u8282\u70B9\n              children.splice(j, 1)\n              j--\n            } else {\n              // \u4E0D\u8FDE\u7EED\u7684\u65F6\u5019\u6E05\u7A7A\n              currentContainer = null\n              break\n            }\n          }\n        }\n      }\n\n      // \u6CA1\u6709\u6587\u672C \u6216\u8005 \u53EA\u6709\u4E00\u4E2A\u6587\u672C\uFF0C\u4E0D\u9700\u8981\u6DFB\u52A0patchFlag\n      if (!hasText || children.length === 1) {\n        return\n      }\n      // patchFlag \u5F53\u5408\u5E76\u5B8C\u4E4B\u540E\uFF0Cchildren\u8FD8\u6709\u591A\u4E2A\u5143\u7D20\u65F6\u3002\u6DFB\u52A0\u52A8\u6001\u8282\u70B9\u7684 patchFlag\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        // \u5982\u679C\u662F\u6587\u672C\u6216\u8005\u662F\u590D\u5408\u8868\u8FBE\u5F0F\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\n          const callArgs = []\n          callArgs.push(child)\n          // \u52A8\u6001\u8282\u70B9\n          if (child.type !== NodeTypes.TEXT) {\n            // \u8F6C\u4E3A\u5B57\u7B26\u4E32\n            callArgs.push(PatchFlags.TEXT + '')\n          }\n\n          // \u6539\u53D8\u8282\u70B9\u5C5E\u6027\n          children[i] = {\n            type: NodeTypes.TEXT_CALL, // \u8FD9\u4E2A\u6807\u8BB0\u8868\u793A\uFF0C\u4F7F\u7528createTextVNode\u5B9E\u73B0\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          }\n        }\n      }\n    }\n  }\n}\n", "import { isString } from '@vue/shared'\nimport { generate } from './codegen'\nimport { parse } from './parse'\nimport { transform } from './transform'\nimport { transformElement } from './transform/transformElement'\nimport { transformExpression } from './transform/transformExpression'\nimport { transformText } from './transform/transformText'\n\n/**\n * 1. parse \u5C06\u6A21\u677F\u8F6C\u6362\u4E3A\u62BD\u8C61\u8BED\u6CD5\u6811\n * 2. transform \u9884\u5904\u7406\u62BD\u8C61\u8BED\u6CD5\u6811\n * 3. generate \u5C06\u62BD\u8C61\u8BED\u6CD5\u6811\u8F6C\u6362\u4E3A\u771F\u662F\u4EE3\u7801\n */\nexport function compile(template) {\n  // parse\n  const ast = isString(template) ? parse(template) : template\n\n  // transform\n  const nodeTransform = [transformExpression, transformElement, transformText]\n  transform(ast, { nodeTransform: nodeTransform })\n  console.log('\uD83D\uDE80 ~ file: compile.ts ~ line 19 ~ compile ~ ast', ast)\n\n  // generate\n  return generate(ast)\n}\n"],
  "mappings": "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",
  "names": []
}
